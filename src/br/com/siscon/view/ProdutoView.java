package br.com.siscon.view;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import br.com.siscon.model.ProdutoModel;
import br.com.siscon.service.ProdutoService;
import br.com.siscon.util.Datas;
import br.com.siscon.util.Formatador;

/**
 *
 * @author joseluiz
 */
public class ProdutoView extends javax.swing.JInternalFrame {

    Datas mascaraDatas = new Datas();
    ProdutoModel produtoModel = new ProdutoModel();
    ProdutoService produtoService = new ProdutoService();
    ArrayList<ProdutoModel> listaProdutoModel = new ArrayList<>();
    Formatador formatador = new Formatador();
    String alterarSalvar;
    Datas datas = new Datas();
    DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    LocalDateTime timepoint = LocalDateTime.now();

    /**
     * Creates new form ProdutoView
     */
    public ProdutoView() {
        initComponents();
        habilitarDesabilitarCampos(false); // desabilita o formulario
        carregarProdutos(); //carrega os produtos já cadastrados na tabela
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfDescricaoProduto = new javax.swing.JTextField();
        jtfCodigoBarras = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfValorUnitario = new javax.swing.JTextField();
        jtfQuantidadeProduto = new javax.swing.JTextField();
        jtfValorTotal = new javax.swing.JTextField();
        dpDataEntrada = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jbCancelar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtProduto = new javax.swing.JTable();
        jtfObservacao = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Produtos");

        jPanel1.setBackground(new java.awt.Color(47, 79, 79));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Descrição Produto:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Codigo de Barras:");
        jLabel2.setToolTipText("");

        jtfDescricaoProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jtfCodigoBarras.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Unitário(R$):");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Quantidade:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total(R$):");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Data Entrada:");

        jtfValorUnitario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jtfQuantidadeProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jtfValorTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        dpDataEntrada.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Observações Gerais:");

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-cancelar-2-24.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setToolTipText("Cancelar Cliente");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbNovo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-adicionar-arquivo-24.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.setToolTipText("Novo Cliente");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-salvar-24.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setToolTipText("Salvar Cliente");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-crie-um-novo-24.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setToolTipText("Alterar Cliente");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-lixo-24.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setToolTipText("Excluir Cliente");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jtProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item", "Cod. Barras", "Descricao", "Qtde", "Total(R$)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtProduto);
        if (jtProduto.getColumnModel().getColumnCount() > 0) {
            jtProduto.getColumnModel().getColumn(0).setResizable(false);
            jtProduto.getColumnModel().getColumn(0).setPreferredWidth(2);
            jtProduto.getColumnModel().getColumn(1).setPreferredWidth(20);
            jtProduto.getColumnModel().getColumn(2).setPreferredWidth(90);
            jtProduto.getColumnModel().getColumn(3).setPreferredWidth(10);
            jtProduto.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        jtfObservacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jtfCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jtfObservacao)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(dpDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jtfValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jtfQuantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(jLabel5))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(38, 38, 38)
                                .addComponent(jLabel6)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jbCancelar)
                .addGap(18, 18, 18)
                .addComponent(jbExcluir)
                .addGap(18, 18, 18)
                .addComponent(jbNovo)
                .addGap(18, 18, 18)
                .addComponent(jbAlterar)
                .addGap(18, 18, 18)
                .addComponent(jbSalvar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfQuantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar)
                    .addComponent(jbNovo)
                    .addComponent(jbSalvar)
                    .addComponent(jbAlterar)
                    .addComponent(jbExcluir))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        /**
         * ao cancelar desabilita os campos altera o nome do botao salvar limpa
         * os campos joga o foco para o campo pesquisa
         */
        this.habilitarDesabilitarCampos(false);
        jbSalvar.setText("Salvar");
        this.limparCampos();
        jtfDescricaoProduto.requestFocusInWindow();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        /**
         * ao clicar em novo limpa os campos habilita o formulário seta 'salvar'
         * na variavel global coloca o foco do mouse para o campo nome altera o
         * nome do botao salvar
         */
        limparCampos();
        habilitarDesabilitarCampos(true);
        alterarSalvar = "salvar";
        jtfDescricaoProduto.requestFocusInWindow();
        jbSalvar.setText("Salvar");

    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        /**
         * chama o metódo para salvar ou alterar diferenciado pela escolha do
         * usuário
         */
        if (alterarSalvar.equals("salvar")) {
            this.salvarProduto();
        } else if (alterarSalvar.equals("alterar")) {
            this.alterarProduto();
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        /**
         * altera a variavel global para alterar altera o nome do botao salvar
         * joga o foco para o campo nome habilita os campos atribui a uma
         * variavel a linha selecionada na tabela
         */
        alterarSalvar = "alterar";
        jbSalvar.setText("Alterar");
        jtfDescricaoProduto.requestFocusInWindow();
        habilitarDesabilitarCampos(true);
        int linha = jtProduto.getSelectedRow();

        try {
            int codigoProduto = (int) this.jtProduto.getValueAt(linha, 0);
            System.out.println(codigoProduto);
            // recupera os dados do BD
            produtoModel = produtoService.getProdutoDAO(codigoProduto);

            //colocar os dados do BD na tabela
            jtfCodigoBarras.setText(String.valueOf(produtoModel.getProCodigoBarras()));
            jtfDescricaoProduto.setText(produtoModel.getProDescricao());
            jtfQuantidadeProduto.setText(String.valueOf(produtoModel.getProQuantidadeEstoque()));
            jtfValorTotal.setText(String.valueOf((produtoModel.getProValorTotal())));
            jtfValorUnitario.setText(String.valueOf(produtoModel.getProValorUnitario()));
            jtfObservacao.setText(jtfObservacao.getText());
            dpDataEntrada.setText(produtoModel.getProDataEntrada());

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Código invalido ou nenhum registro selecionado", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed

        /**
         * seta a linha que o usuário selecionar na tabela na variavel linha e
         * seta o produto pegando a linha selecionada e a posição 0
         */
        int linha = jtProduto.getSelectedRow();
        int codigoProduto = (int) jtProduto.getValueAt(linha, 0);
        /**
         * menu de opções para o usuário confirmar a exclusão do produto
         */
        Object[] opcoes = {"Sim", "Não"};
        Object resposta;
        resposta = JOptionPane.showInputDialog(null,
                "Deseja excluir o produto?",
                "Excluir",
                JOptionPane.OK_CANCEL_OPTION,
                null,
                opcoes,
                "Sim");
        if (resposta.equals("Sim")) {
            /**
             * exclui o produto do banco de dados e atualiza a tabela
             * automaticamete apos excluir altera oo nome do botao para salvar
             * atualiza a lista dos produtos e desabilita os campos para um novo
             * cadastro e volta o foco do mouse para o campo pesquisa
             */
            if (produtoService.excluirProdutoDAO(codigoProduto)) {
                JOptionPane.showMessageDialog(this, "Produto excluido com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
                jbSalvar.setText("Salvar");
                carregarProdutos();
                this.habilitarDesabilitarCampos(false);
                jtfDescricaoProduto.requestFocusInWindow();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir o produto", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    //Metódo para carregar os produtos do BD e inserir na tabela
    private void carregarProdutos() {
        /**
         * Array que buscará no BD (atraves do Controller) os dados para serem
         * exibidos na tabela
         */
        listaProdutoModel = produtoService.getListaProdutoDAO();
        DefaultTableModel modelo = (DefaultTableModel) jtProduto.getModel();

        //Setando a quantidade de linhas que a tabela para não haver duplicação de dados
        modelo.setNumRows(0);
        // insere os produtos na tabela
        int cont = listaProdutoModel.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaProdutoModel.get(i).getProCodigoProduto(),
                listaProdutoModel.get(i).getProCodigoBarras(),
                listaProdutoModel.get(i).getProDescricao(),
                listaProdutoModel.get(i).getProQuantidadeEstoque(),
                listaProdutoModel.get(i).getProValorTotal()
            });
        }
    }

    private void salvarProduto() {
        // Salva um novo produto no BD e atualiza a tabela
        produtoModel.setProDescricao(jtfDescricaoProduto.getText().toUpperCase());
        produtoModel.setProQuantidadeEstoque(Integer.parseInt(jtfQuantidadeProduto.getText()));
        produtoModel.setProValorTotal(formatador.converterVirgulaParaPonto(jtfValorTotal.getText()));
        produtoModel.setProValorUnitario(formatador.converterVirgulaParaPonto(jtfValorUnitario.getText()));
        produtoModel.setProCodigoBarras(jtfCodigoBarras.getText());
        produtoModel.setProDataEntrada(dpDataEntrada.getText());
        produtoModel.setProObservacao(jtfObservacao.getText().toUpperCase());
        /**
         * chama o metodo de salvar no controller salva o produto altera o nome
         * do botao salvar recarrega os produtos exibidos na tabela limpa os
         * campos do formulario desabilita os campos do formluario se houver
         * algum erro exibe uma mensagem na tela
         */
        if (produtoService.salvarProdutoDAO(produtoModel) > 0) {
            JOptionPane.showMessageDialog(this, "Produto: " + produtoModel.getProDescricao() + " cadastrado com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
            jbSalvar.setText("Salvar");
            carregarProdutos();
            limparCampos();
            habilitarDesabilitarCampos(false);
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar o produto", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Metódo para alterar e salvar o cliente. Esse metódo é invocado no botao
     * salvar após a verificação da variavel global alterarSalvar
     */
    private void alterarProduto() {
        // altera e salva o  produto no BD e atualiza a tabela
        produtoModel.setProDescricao(jtfDescricaoProduto.getText().toUpperCase());
        produtoModel.setProQuantidadeEstoque(Integer.parseInt(jtfQuantidadeProduto.getText()));
        produtoModel.setProValorTotal(formatador.converterVirgulaParaPonto(jtfValorTotal.getText()));
        produtoModel.setProValorUnitario(formatador.converterVirgulaParaPonto(jtfValorUnitario.getText()));
        produtoModel.setProCodigoBarras(jtfCodigoBarras.getText());
        produtoModel.setProDataEntrada(dpDataEntrada.getText());
        produtoModel.setProObservacao(jtfObservacao.getText().toUpperCase());

        /**
         * chama o metodo de alterar no controller salva o produto altera o nome
         * do botao salvar recarrega os produtos exibidos na tabela limpa os
         * campos do formulario desabilita os campos do formluario se houver
         * algum erro exibe uma mensagem na tela
         */
        if (produtoService.atualizarProdutoDAO(produtoModel)) {
            JOptionPane.showMessageDialog(this, "Produto alterado com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
            carregarProdutos();
            limparCampos();
            habilitarDesabilitarCampos(false);
            this.jbSalvar.setText("Salvar");
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar o produto!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * habilitar ou desabilitar os campos do formulário
     *
     * @param condicao
     */
    private void habilitarDesabilitarCampos(boolean condicao) {
        jtfCodigoBarras.setEnabled(condicao);
        jtfDescricaoProduto.setEnabled(condicao);
        jtfQuantidadeProduto.setEnabled(condicao);
        jtfValorTotal.setEnabled(condicao);
        jtfValorUnitario.setEnabled(condicao);
        jtfObservacao.setEnabled(condicao);
        dpDataEntrada.setEnabled(condicao);
        jbSalvar.setEnabled(condicao);
    }

    private void limparCampos() {
        jtfCodigoBarras.setText("");
        jtfDescricaoProduto.setText("");
        jtfQuantidadeProduto.setText("");
        jtfValorTotal.setText("");
        jtfValorUnitario.setText("");
        jtfObservacao.setText("");
        dpDataEntrada.setText(timepoint.format(fmt));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dpDataEntrada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JTable jtProduto;
    private javax.swing.JTextField jtfCodigoBarras;
    private javax.swing.JTextField jtfDescricaoProduto;
    private javax.swing.JTextField jtfObservacao;
    private javax.swing.JTextField jtfQuantidadeProduto;
    private javax.swing.JTextField jtfValorTotal;
    private javax.swing.JTextField jtfValorUnitario;
    // End of variables declaration//GEN-END:variables
}
