package br.com.siscon.view;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import br.com.siscon.model.ClienteModel;
import br.com.siscon.service.ClienteService;

/**
 *
 * @author joseluiz
 */
public class ClienteView extends javax.swing.JInternalFrame {

    /**
     * instancia o controller do usuario o model do usuario instancia o
     * modelusuario em uma lista
     */
    ClienteService clienteService = new ClienteService();
    ClienteModel clienteModel = new ClienteModel();
    ArrayList<ClienteModel> listaModelCliente = new ArrayList<>();
    String alterarSalvar;

    /**
     * Creates new form Cliente
     */
    public ClienteView() {
        initComponents();
        desabilitaHabilitaCampos(false); //desabilita o formulário
        // carregarCliente(); //carrega os clientes já cadastrados na tabela
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jtfEndereco = new javax.swing.JTextField();
        jtfBairro = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jtfCidade = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jcbUf = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtCliente = new javax.swing.JTable();
        jbCancelar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jtfCep = new javax.swing.JFormattedTextField();
        jtfTelefone = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jtfNumero = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfCelular = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Cliente");
        setVisible(true);

        jPanel5.setBackground(new java.awt.Color(47, 79, 79));
        jPanel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel28.setBackground(new java.awt.Color(47, 79, 79));
        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Nome:");

        jtfNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfNome.setToolTipText("");
        jtfNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jtfNomeMouseEntered(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Endereço:");

        jtfEndereco.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfEndereco.setToolTipText("");

        jtfBairro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfBairro.setToolTipText("");

        jLabel30.setBackground(new java.awt.Color(47, 79, 79));
        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Bairro:");

        jLabel31.setBackground(new java.awt.Color(47, 79, 79));
        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Cidade:");

        jtfCidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel32.setBackground(new java.awt.Color(47, 79, 79));
        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("UF:");

        jcbUf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcbUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        jLabel7.setBackground(new java.awt.Color(47, 79, 79));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("CEP:");

        jLabel8.setBackground(new java.awt.Color(47, 79, 79));
        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Telefone:");

        jtCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome do Cliente", "Endereço", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCliente.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jtCliente);
        if (jtCliente.getColumnModel().getColumnCount() > 0) {
            jtCliente.getColumnModel().getColumn(0).setResizable(false);
            jtCliente.getColumnModel().getColumn(0).setPreferredWidth(10);
            jtCliente.getColumnModel().getColumn(1).setResizable(false);
            jtCliente.getColumnModel().getColumn(1).setPreferredWidth(90);
            jtCliente.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-cancelar-2-24.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setToolTipText("Cancelar Cliente");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbNovo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-adicionar-arquivo-24.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.setToolTipText("Novo Cliente");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-salvar-24.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setToolTipText("Salvar Cliente");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-crie-um-novo-24.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setToolTipText("Alterar Cliente");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siscon/imagens/buttons/icons8-lixo-24.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setToolTipText("Excluir Cliente");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        try {
            jtfCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfCep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        try {
            jtfTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfTelefone.setToolTipText("Entre com o telefone sem o nono digito");
        jtfTelefone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Número:");

        jtfNumero.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Celular");

        try {
            jtfCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfCelular.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Email:");

        jtfEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel29)
                                .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jtfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel30))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel31)
                                            .addComponent(jtfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel28)
                                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbUf, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel32)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jtfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(104, 104, 104))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jbCancelar)
                            .addGap(18, 18, 18)
                            .addComponent(jbExcluir)
                            .addGap(18, 18, 18)
                            .addComponent(jbNovo)
                            .addGap(18, 18, 18)
                            .addComponent(jbAlterar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbSalvar))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addGap(37, 37, 37)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel1)
                    .addComponent(jLabel32)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbCancelar)
                            .addComponent(jbNovo)
                            .addComponent(jbSalvar)
                            .addComponent(jbAlterar)
                            .addComponent(jbExcluir)))
                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 610, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfNomeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNomeMouseEntered

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        /**
         * ao cancelar desabilita os campos altera o nome do botao salvar limpa
         * os campos
         */
        jbSalvar.setText("Salvar");
        this.desabilitaHabilitaCampos(false);
        this.limparCampos();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        /**
         * ao clicar em novo limpa os campos habilita o formulário seta 'salvar'
         * na variavel global coloca o foco do mouse para o campo nome altera o
         * nome do botao salvar
         */
        jbSalvar.setText("Salvar");
        limparCampos();
        desabilitaHabilitaCampos(true);
        alterarSalvar = "salvar";
        jtfNome.requestFocusInWindow();
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        /**
         * chama o Metodo para salvar ou alterar diferenciado pela escolha do
         * usuário
         */
        if (alterarSalvar.equals("salvar")) {
            this.salvarCliente();
        } else if (alterarSalvar.equals("alterar")) {
            this.alterarCliente();
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:
        /**
         * altera a variavel global para alterar altera o nome do botao salvar
         * joga o foco para o campo nome habilita os campos atribui a uma
         * variavel a linha selecionada na tabela
         */

        alterarSalvar = "alterar";
        jbSalvar.setText("Alterar");
        jtfNome.requestFocusInWindow();
        desabilitaHabilitaCampos(true);
        int linha = jtCliente.getSelectedRow();
        try {
            int codigoCliente = (int) jtCliente.getValueAt(linha, 0);
            //recupera os dados do BD
            clienteModel = clienteService.getClienteDAO(codigoCliente);
            //colocar os dados do BD na tabela
            jtfNome.setText(clienteModel.getCliNome());
            jtfEndereco.setText(clienteModel.getCliRua());
            jtfBairro.setText(clienteModel.getCliBairro());
            jtfCidade.setText(clienteModel.getCliCidade());
            jcbUf.setSelectedItem(clienteModel.getCliUf());
            jtfCep.setText(clienteModel.getCliCep());
            jtfTelefone.setText(clienteModel.getCliTelefone());
            jtfNumero.setText(clienteModel.getCliNumero());
            jtfCelular.setText(clienteModel.getCliCelular());
            jtfEmail.setText(clienteModel.getCliEmail());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código invalido ou nenhum registro selecionado", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        //Excluir cliente do BD e atualiza a tabela
        int linha = jtCliente.getSelectedRow();
        int codigoCliente = (int) jtCliente.getValueAt(linha, 0);
        //menu de opções para o usuario confirmar a exclusão
        Object[] opcoes = {"Sim", "Não"};
        Object resposta;
        resposta = JOptionPane.showInputDialog(null,
                "Deseja excluir o cliente?",
                "Excluir",
                JOptionPane.OK_CANCEL_OPTION,
                null,
                opcoes,
                "Sim");
        if (resposta.equals("Sim")) {
            /**
             * exclui o cliente do banco de dados e atualiza a tabela
             * automaticamete apos excluir altera oo nome do botao para salvar
             * atualiza a lista dos clientes e desabilita os campos para um novo
             */
            if (clienteService.excluirClienteDAO(codigoCliente)) {
                JOptionPane.showMessageDialog(this, "Cliente excluido com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
                jbSalvar.setText("Salvar");
                carregarCliente();
                this.desabilitaHabilitaCampos(false);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir o cliente!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    /**
     * Metodo para caregar do BD os clientes e exibi-los na tabela
     */
    public void carregarCliente() {
        /**
         * Array que buscará no BD (atraves do Controller) os dados para serem
         * exibidos na tabela
         */
        listaModelCliente = clienteService.getListaClienteDAO();
        DefaultTableModel modelo = (DefaultTableModel) jtCliente.getModel();

        //Setando a quantidade de linhas que a tabela para não haver duplicação de dados
        modelo.setNumRows(0);

        // insere os produtos na tabela
        int cont = listaModelCliente.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelCliente.get(i).getIdCliente(),
                listaModelCliente.get(i).getCliNome(),
                listaModelCliente.get(i).getCliRua(),
                listaModelCliente.get(i).getCliTelefone()

            });
        }
    }

    /**
     * Metodo para salvar o cliente. Esse Metodo é invocado no botao salvar após
     * a verificação da variavel global alterarSalvar
     */
    private void salvarCliente() {
        // Salva um novo cliente no BD e atualiza a tabela
        clienteModel.setCliNome(jtfNome.getText().toUpperCase());
        clienteModel.setCliRua(jtfEndereco.getText().toUpperCase());
        clienteModel.setCliBairro(jtfBairro.getText().toUpperCase());
        clienteModel.setCliCidade(jtfCidade.getText().toUpperCase());
        clienteModel.setCliNumero(jtfNumero.getText());
        clienteModel.setCliUf(jcbUf.getSelectedItem().toString());
        clienteModel.setCliCep(jtfCep.getText());
        clienteModel.setCliTelefone(jtfTelefone.getText());
        clienteModel.setCliEmail(jtfEmail.getText());
        clienteModel.setCliCelular(jtfCelular.getText());
        /**
         * chama o metodo de salvar no controller salva o cliente altera o nome
         * do botao salvar recarrega os produtos exibidos na tabela limpa os
         * campos do formulario desabilita os campos do formluario se houver
         * algum erro exibe uma mensagem na tela
         */
        if (clienteService.salvarClienteDAO(clienteModel) > 0) {
            JOptionPane.showMessageDialog(this, "Cliente: " + clienteModel.getCliNome() + " cadastrado com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
            jbSalvar.setText("Salvar");
            carregarCliente();
            limparCampos();
            desabilitaHabilitaCampos(false);
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar o cliente", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Metodo para alterar e salvar o cliente. Esse Metodo é invocado no botao
     * salvar após a verificação da variavel global alterarSalvar
     */
    private void alterarCliente() {
        // altera e salva o  cliente no BD e atualiza a tabela
        clienteModel.setCliNome(jtfNome.getText().toUpperCase());
        clienteModel.setCliRua(jtfEndereco.getText().toUpperCase());
        clienteModel.setCliBairro(jtfBairro.getText().toUpperCase());
        clienteModel.setCliCidade(jtfCidade.getText().toUpperCase());
        clienteModel.setCliNumero(jtfNumero.getText());
        clienteModel.setCliUf(jcbUf.getSelectedItem().toString());
        clienteModel.setCliCep(jtfCep.getText());
        clienteModel.setCliTelefone(jtfTelefone.getText());
        clienteModel.setCliEmail(jtfEmail.getText());
        clienteModel.setCliCelular(jtfCelular.getText());
        /**
         * chama o metodo de alterar no controller salva o produto altera o nome
         * do botao salvar recarrega os produtos exibidos na tabela limpa os
         * campos do formulario desabilita os campos do formluario se houver
         * algum erro exibe uma mensagem na tela
         */
        if (clienteService.atualizarClienteDAO(clienteModel)) {
            JOptionPane.showMessageDialog(this, "Cliente alterado com sucesso!", "Atenção", JOptionPane.WARNING_MESSAGE);
            jbSalvar.setText("Salvar");
            carregarCliente();
            limparCampos();
            desabilitaHabilitaCampos(false);
            this.jbSalvar.setText("Salvar");
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar o cliente!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Metodo para desativar ou não os campos mediante escolha por uma variavel
     * booleana
     *
     * @param condicao
     */
    private void desabilitaHabilitaCampos(boolean condicao) {
        jtfNome.setEnabled(condicao);
        jtfEndereco.setEnabled(condicao);
        jtfBairro.setEnabled(condicao);
        jtfCidade.setEnabled(condicao);
        jtfNumero.setEnabled(condicao);
        jcbUf.setEnabled(condicao);
        jtfCep.setEnabled(condicao);
        jtfTelefone.setEnabled(condicao);
        jbSalvar.setEnabled(condicao);
        jtfCelular.setEnabled(condicao);
        jtfEmail.setEnabled(condicao);
    }

    /**
     * Metodo para limpar os campos caso o cadastro seja cancelado salvo ou
     * alterado.
     */
    private void limparCampos() {
        jtfNome.setText("");
        jtfEndereco.setText("");
        jtfBairro.setText("");
        jtfCidade.setText("");
        jtfNumero.setText("");
        jcbUf.setSelectedItem("AC");
        jtfCep.setText("");
        jtfTelefone.setText("");
        jtfEmail.setText("");
        jtfCelular.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox<String> jcbUf;
    private javax.swing.JTable jtCliente;
    private javax.swing.JTextField jtfBairro;
    private javax.swing.JFormattedTextField jtfCelular;
    private javax.swing.JFormattedTextField jtfCep;
    private javax.swing.JTextField jtfCidade;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfNumero;
    private javax.swing.JFormattedTextField jtfTelefone;
    // End of variables declaration//GEN-END:variables
}
